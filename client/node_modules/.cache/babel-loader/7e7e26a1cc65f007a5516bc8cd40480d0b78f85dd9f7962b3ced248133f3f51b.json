{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\mini-fullStack-application-main\\\\client\\\\src\\\\components\\\\Table\\\\InfiniteScrollTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfiniteScrollTable = _ref => {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [visibleItems, setVisibleItems] = useState(6); // Initial number of visible rows\n  const [hasMore, setHasMore] = useState(true);\n  const handleScroll = () => {\n    const windowHeight = window.innerHeight;\n    const documentHeight = document.documentElement.scrollHeight;\n    const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n    if (documentHeight - scrollTop - windowHeight < 100 && hasMore) {\n      // User has scrolled to the bottom (with a small buffer of 100px)\n      setVisibleItems(prevVisibleItems => Math.min(prevVisibleItems + 6, data.length));\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [handleScroll]);\n  useEffect(() => {\n    // Check if there are more rows to load\n    setHasMore(visibleItems < data.length);\n  }, [visibleItems, data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxHeight: '400px',\n      overflowY: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.slice(0, visibleItems).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), hasMore && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading more...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(InfiniteScrollTable, \"KHKn3RmdGkilK7P7frvpE9jc55M=\");\n_c = InfiniteScrollTable;\nexport default InfiniteScrollTable;\nvar _c;\n$RefreshReg$(_c, \"InfiniteScrollTable\");","map":{"version":3,"names":["React","useState","useEffect","Table","jsxDEV","_jsxDEV","InfiniteScrollTable","_ref","_s","data","visibleItems","setVisibleItems","hasMore","setHasMore","handleScroll","windowHeight","window","innerHeight","documentHeight","document","documentElement","scrollHeight","scrollTop","body","prevVisibleItems","Math","min","length","addEventListener","removeEventListener","style","maxHeight","overflowY","children","striped","bordered","hover","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","item","id","name","_c","$RefreshReg$"],"sources":["C:/Users/1/Desktop/mini-fullStack-application-main/client/src/components/Table/InfiniteScrollTable.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst InfiniteScrollTable = ({ data }) => {\r\n  const [visibleItems, setVisibleItems] = useState(6); // Initial number of visible rows\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  const handleScroll = () => {\r\n    const windowHeight = window.innerHeight;\r\n    const documentHeight = document.documentElement.scrollHeight;\r\n    const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\r\n\r\n    if (documentHeight - scrollTop - windowHeight < 100 && hasMore) {\r\n      // User has scrolled to the bottom (with a small buffer of 100px)\r\n      setVisibleItems((prevVisibleItems) => Math.min(prevVisibleItems + 6, data.length));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [handleScroll]);\r\n\r\n  useEffect(() => {\r\n    // Check if there are more rows to load\r\n    setHasMore(visibleItems < data.length);\r\n  }, [visibleItems, data]);\r\n\r\n  return (\r\n    <div style={{ maxHeight: '400px', overflowY: 'auto' }}>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            {/* Add other table headers as needed */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.slice(0, visibleItems).map((item) => (\r\n            <tr key={item.id}>\r\n              <td>{item.id}</td>\r\n              <td>{item.name}</td>\r\n              {/* Add other table cells as needed */}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {hasMore && <p>Loading more...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfiniteScrollTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}